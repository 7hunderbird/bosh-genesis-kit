---
params:
  subnet_addr: (( param "What network CIDR is your protobosh's network?" ))
  default_gateway: (( param "What is the gateway IP of your protobosh's network?" ))
  dns: (( param "What DNS servers should your protobosh use?" ))
  ephemeral_disk_size: 25_600
  persistent_disk_size: 32_768

meta:
  stemcells:
    aws:
      url:  https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-xenial-go_agent?v=170.21
      sha1: 8df8384655add4d22dd3e3c38db8995c3cb9ca34
    azure:
      url:  https://bosh.io/d/stemcells/bosh-azure-hyperv-ubuntu-xenial-go_agent?v=170.21
      sha1: 502a0ac194515984ca9335a5522adec46174b015
    google:
      url:  https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-xenial-go_agent?v=170.21
      sha1: a27e7fd1a1496dc6297c36623e356d6cf41c7642
    openstack:
      url:  https://bosh.io/d/stemcells/bosh-openstack-kvm-ubuntu-xenial-go_agent?v=170.21
      sha1: dac60b10a8d84731d0a471271f150395fc6b541e
    vsphere:
      url:  https://bosh.io/d/stemcells/bosh-vsphere-esxi-ubuntu-xenial-go_agent?v=170.21
      sha1: 49104015fb229ce1af5629bae79a163415e2d1c2

  stemcell: (( param "The IaaS-specific kit did not specify its stemcell; please file an issue with your Kit Author" ))
  mbus_bootstrap_password: (( vault meta.vault "/mbus_bootstrap:password" ))

resource_pools:
- name: (( grab params.bosh_vm_type ))
  network: (( grab params.bosh_network ))
  stemcell: (( grab meta.stemcell ))
  env:
    bosh:
      password: (( vault meta.vault "/vcap:password-crypt-sha512" ))
      mbus:
        cert: 
          ca: (( vault meta.vault "/ssl/ca:certificate" ))
          certificate: (( vault meta.vault "/ssl/mbus:certificate" ))
          private_key: (( vault meta.vault "/ssl/mbus:key" ))

disk_pools:
  - name: (( grab params.bosh_disk_pool ))
    disk_size: (( grab params.persistent_disk_size ))

networks:
- name: (( grab params.bosh_network ))
  type: manual
  subnets:
  - range:    (( grab params.subnet_addr ))
    gateway:  (( grab params.default_gateway ))
    dns:      (( grab params.dns ))
    static: [ (( grab params.static_ip )) ]

instance_groups:
- name: bosh
  vm_type:              (( prune ))
  persistent_disk_type: (( prune ))
  resource_pool:        (( grab params.bosh_vm_type ))
  persistent_disk_pool: (( grab params.bosh_disk_pool ))

cloud_provider:
  mbus: (( concat "https://mbus:" meta.mbus_bootstrap_password "@" params.static_ip ":6868" ))
  cert:
    ca: (( vault meta.vault "/ssl/ca:certificate" ))
    certificate: (( vault meta.vault "/ssl/mbus:certificate" ))
    private_key: (( vault meta.vault "/ssl/mbus:key" ))
  properties:
    ntp: (( grab params.ntp ))

    blobstore:
      provider: local
      path:     /var/vcap/micro_bosh/data/cache

    agent:
      mbus: (( concat "https://mbus:" meta.mbus_bootstrap_password "@0.0.0.0:6868" ))
