---
instance_groups:
- name: bosh
  jobs:
    - name: credhub
      properties:
        credhub:
          authentication:
            uaa:
              ca_certs:
                - (( vault meta.vault "/ssl/ca:certificate" ))
              url: (( concat "https://" params.static_ip ":8443" )) # FIXME could be grabbed
              verification_key: (( vault meta.vault "/uaa/jwt:public" ))
          data_storage:
            username: (( grab meta.bosh.db.user ))
            password: (( grab meta.bosh.db.pass ))
          encryption:
            keys:
              - (( inline ))
              - encryption_password: (( vault meta.vault "/credhub/encryption:key" ))
          tls:
            certificate: (( vault meta.vault "/credhub/server:certificate" ))
            private_key: (( vault meta.vault "/credhub/server:key" ))

    - name: uaa
      properties:
        login:
          saml:
            serviceProviderKey:         (( vault meta.vault "/ssl/uaa-sp:key" ))
            serviceProviderCertificate: (( vault meta.vault "/ssl/uaa-sp:certificate" ))
            serviceProviderKeyPassword: (( empty string ))
        uaa:
          clients:
            admin:
              secret: (( vault meta.vault "/users/admin:password" ))
            director_to_credhub:
              secret: (( vault meta.vault "/uaa/clients/director_to_credhub:secret" ))
            hm:
              secret: (( vault meta.vault "/uaa/clients/hm:secret" ))
            uaa_admin:
              secret: (( vault meta.vault "/uaa/clients/uaa_admin:secret" ))
          login:
            client_secret: (( vault meta.vault "/uaa/client:secret" ))
          jwt:
            signing_key:      (( vault meta.vault "/uaa/jwt:private" ))
            verification_key: (( vault meta.vault "/uaa/jwt:public" ))
          scim:
            users:
              - name: admin
                password: (( vault meta.vault "/users/admin:password" ))
              - name: credhub-cli
                password: (( vault meta.vault "/uaa/users/credhub-cli:password" ))
          sslCertificate: (( vault meta.vault "/ssl/uaa:certificate" ))
          sslPrivateKey:  (( vault meta.vault "/ssl/uaa:key" ))
          url: (( concat "https://" params.static_ip ":8443" ))
        uaadb:
          roles:
            - (( inline ))
            - name:     (( grab meta.bosh.db.user ))
              password: (( grab meta.bosh.db.pass ))

  properties:
    agent:
      mbus: (( concat "nats://" meta.bosh.nats.user ":" meta.bosh.nats.pass "@" params.static_ip ":4222" ))
    blobstore:
      address: (( grab params.static_ip ))
      agent:
        user: (( grab meta.bosh.blobstore.agent.user ))
        password: (( grab meta.bosh.blobstore.agent.pass ))
      director:
        user: (( grab meta.bosh.blobstore.director.user ))
        password: (( grab meta.bosh.blobstore.director.pass ))
    director:
      config_server:
        ca_cert: (( vault meta.vault "/credhub/ca:certificate" ))
        url: (( concat "https://" params.static_ip ":8844/api/" ))
        uaa:
          ca_cert: (( vault meta.vault "/ssl/ca:certificate" ))
          client_secret: (( vault meta.vault "/uaa/clients/director_to_credhub:secret" ))
          url: (( concat "https://" params.static_ip ":8443" ))
      ssl:
        cert: (( vault meta.vault "/ssl/server:certificate" ))
        key: (( vault meta.vault "/ssl/server:key" ))
      address: (( grab params.static_ip ))
      db: (( grab instance_groups.bosh.properties.postgres ))
      name: (( grab name ))
      user_management:
        local:
          users:
          - (( replace ))
          - name: (( grab meta.bosh.users.hm.username ))
            password: (( grab meta.bosh.users.hm.password ))
          - name: (( grab meta.bosh.users.admin.username ))
            password: (( grab meta.bosh.users.admin.password ))
        uaa:
          url: (( concat "https://" params.static_ip ":8443" ))
          public_key: (( vault meta.vault "/uaa/jwt:public" ))
    hm:
      director_account:
        client_secret: (( vault meta.vault "/uaa/clients/hm:secret" ))
        user: (( grab meta.bosh.users.hm.username ))
        password: (( grab meta.bosh.users.hm.password ))
        ca_cert: (( vault meta.vault "/ssl/ca:certificate" ))
    nats:
      address: (( grab params.static_ip ))
      user: (( grab meta.bosh.nats.user ))
      password: (( grab meta.bosh.nats.pass ))
      tls:
         ca: (( vault meta.vault "/nats/ca:certificate" ))
         client_ca:
           certificate: (( vault meta.vault "/nats/ca:certificate" ))
           private_key: (( vault meta.vault "/nats/ca:key" ))
         server:
           certificate: (( vault meta.vault "/nats/server:certificate" ))
           private_key: (( vault meta.vault "/nats/server:key" ))
         director:
           certificate: (( vault meta.vault "/nats/director:certificate" ))
           private_key: (( vault meta.vault "/nats/director:key" ))
         health_monitor:
           certificate: (( vault meta.vault "/nats/health/monitor:certificate" ))
           private_key: (( vault meta.vault "/nats/health/monitor:key" ))
    postgres:
      user: (( grab meta.bosh.db.user ))
      password: (( grab meta.bosh.db.pass ))
    ntp: (( grab params.ntp ))
